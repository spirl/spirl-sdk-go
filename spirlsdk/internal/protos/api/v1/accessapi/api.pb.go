// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: api/v1/accessapi/api.proto

package accessapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuditLogSource int32

const (
	AuditLogSource_AUDIT_LOG_SOURCE_UNKNOWN   AuditLogSource = 0
	AuditLogSource_AUDIT_LOG_SOURCE_AUTOMATED AuditLogSource = 1
	AuditLogSource_AUDIT_LOG_SOURCE_USER      AuditLogSource = 2
)

// Enum value maps for AuditLogSource.
var (
	AuditLogSource_name = map[int32]string{
		0: "AUDIT_LOG_SOURCE_UNKNOWN",
		1: "AUDIT_LOG_SOURCE_AUTOMATED",
		2: "AUDIT_LOG_SOURCE_USER",
	}
	AuditLogSource_value = map[string]int32{
		"AUDIT_LOG_SOURCE_UNKNOWN":   0,
		"AUDIT_LOG_SOURCE_AUTOMATED": 1,
		"AUDIT_LOG_SOURCE_USER":      2,
	}
)

func (x AuditLogSource) Enum() *AuditLogSource {
	p := new(AuditLogSource)
	*p = x
	return p
}

func (x AuditLogSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditLogSource) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_accessapi_api_proto_enumTypes[0].Descriptor()
}

func (AuditLogSource) Type() protoreflect.EnumType {
	return &file_api_v1_accessapi_api_proto_enumTypes[0]
}

func (x AuditLogSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditLogSource.Descriptor instead.
func (AuditLogSource) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{0}
}

type AuditLogActorType int32

const (
	AuditLogActorType_AUDIT_LOG_ACTOR_TYPE_UNKNOWN         AuditLogActorType = 0
	AuditLogActorType_AUDIT_LOG_ACTOR_TYPE_USER            AuditLogActorType = 1
	AuditLogActorType_AUDIT_LOG_ACTOR_TYPE_SERVICE_ACCOUNT AuditLogActorType = 2
	AuditLogActorType_AUDIT_LOG_ACTOR_TYPE_ADMIN           AuditLogActorType = 3
)

// Enum value maps for AuditLogActorType.
var (
	AuditLogActorType_name = map[int32]string{
		0: "AUDIT_LOG_ACTOR_TYPE_UNKNOWN",
		1: "AUDIT_LOG_ACTOR_TYPE_USER",
		2: "AUDIT_LOG_ACTOR_TYPE_SERVICE_ACCOUNT",
		3: "AUDIT_LOG_ACTOR_TYPE_ADMIN",
	}
	AuditLogActorType_value = map[string]int32{
		"AUDIT_LOG_ACTOR_TYPE_UNKNOWN":         0,
		"AUDIT_LOG_ACTOR_TYPE_USER":            1,
		"AUDIT_LOG_ACTOR_TYPE_SERVICE_ACCOUNT": 2,
		"AUDIT_LOG_ACTOR_TYPE_ADMIN":           3,
	}
)

func (x AuditLogActorType) Enum() *AuditLogActorType {
	p := new(AuditLogActorType)
	*p = x
	return p
}

func (x AuditLogActorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditLogActorType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_accessapi_api_proto_enumTypes[1].Descriptor()
}

func (AuditLogActorType) Type() protoreflect.EnumType {
	return &file_api_v1_accessapi_api_proto_enumTypes[1]
}

func (x AuditLogActorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditLogActorType.Descriptor instead.
func (AuditLogActorType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{1}
}

type ListAuditLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Audit logs list
	Logs []*AuditLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	// If additional logs exist but were not listed due to page size,
	// the next page token will be set and the client can use it to get the next page.
	// Note that filters must be the same as the previous request to iterate over the same logs.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListAuditLogsResponse) Reset() {
	*x = ListAuditLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditLogsResponse) ProtoMessage() {}

func (x *ListAuditLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditLogsResponse.ProtoReflect.Descriptor instead.
func (*ListAuditLogsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{0}
}

func (x *ListAuditLogsResponse) GetLogs() []*AuditLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ListAuditLogsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListAuditLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional Filters.
	Filter *AuditLogFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Time range. Point in time from which to start the query.
	// If not set, will return the events starting from now.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Time range. Point in time until which to end the query.
	// If not set, will return the events from "start_time" until last 24 hours.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Page size. Defaults to 20 if not set.
	PageSize uint32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token. If not set, will return the first page limit by page_size.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListAuditLogsRequest) Reset() {
	*x = ListAuditLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditLogsRequest) ProtoMessage() {}

func (x *ListAuditLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditLogsRequest.ProtoReflect.Descriptor instead.
func (*ListAuditLogsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{1}
}

func (x *ListAuditLogsRequest) GetFilter() *AuditLogFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListAuditLogsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListAuditLogsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ListAuditLogsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAuditLogsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type AuditLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Who performed the action.
	Actor *Actor `protobuf:"bytes,1,opt,name=actor,proto3" json:"actor,omitempty"`
	// Timestamp when the event was created.
	Ts *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=ts,proto3" json:"ts,omitempty"`
	// The trust domain.
	TrustDomain *TrustDomain `protobuf:"bytes,3,opt,name=trust_domain,json=trustDomain,proto3" json:"trust_domain,omitempty"`
	// The source of the action.
	Source AuditLogSource `protobuf:"varint,4,opt,name=source,proto3,enum=com.spirl.api.v1.access.AuditLogSource" json:"source,omitempty"`
	// The request that was made.
	Request *Request `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
	// The status response.
	Status *int32 `protobuf:"varint,6,opt,name=status,proto3,oneof" json:"status,omitempty"`
	// Required. The request ID.
	RequestId string `protobuf:"bytes,7,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *AuditLog) Reset() {
	*x = AuditLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLog) ProtoMessage() {}

func (x *AuditLog) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLog.ProtoReflect.Descriptor instead.
func (*AuditLog) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{2}
}

func (x *AuditLog) GetActor() *Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *AuditLog) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *AuditLog) GetTrustDomain() *TrustDomain {
	if x != nil {
		return x.TrustDomain
	}
	return nil
}

func (x *AuditLog) GetSource() AuditLogSource {
	if x != nil {
		return x.Source
	}
	return AuditLogSource_AUDIT_LOG_SOURCE_UNKNOWN
}

func (x *AuditLog) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *AuditLog) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *AuditLog) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The gRPC service name.
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// Required. The gRPC method name.
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	// Required. The request message.
	Message *anypb.Any `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{3}
}

func (x *Request) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Request) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Request) GetMessage() *anypb.Any {
	if x != nil {
		return x.Message
	}
	return nil
}

type Actor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the actor.
	//
	// Types that are assignable to Actor:
	//
	//	*Actor_User
	//	*Actor_ServiceAccount
	//	*Actor_SpirlAdmin
	Actor isActor_Actor `protobuf_oneof:"actor"`
}

func (x *Actor) Reset() {
	*x = Actor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actor) ProtoMessage() {}

func (x *Actor) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actor.ProtoReflect.Descriptor instead.
func (*Actor) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{4}
}

func (m *Actor) GetActor() isActor_Actor {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (x *Actor) GetUser() *UserActor {
	if x, ok := x.GetActor().(*Actor_User); ok {
		return x.User
	}
	return nil
}

func (x *Actor) GetServiceAccount() *ServiceAccountActor {
	if x, ok := x.GetActor().(*Actor_ServiceAccount); ok {
		return x.ServiceAccount
	}
	return nil
}

func (x *Actor) GetSpirlAdmin() *UserActor {
	if x, ok := x.GetActor().(*Actor_SpirlAdmin); ok {
		return x.SpirlAdmin
	}
	return nil
}

type isActor_Actor interface {
	isActor_Actor()
}

type Actor_User struct {
	// User that performed the action.
	User *UserActor `protobuf:"bytes,1,opt,name=user,proto3,oneof"`
}

type Actor_ServiceAccount struct {
	// Service account that performed the action.
	ServiceAccount *ServiceAccountActor `protobuf:"bytes,2,opt,name=service_account,json=serviceAccount,proto3,oneof"`
}

type Actor_SpirlAdmin struct {
	// SPIRL admin that performed the action.
	SpirlAdmin *UserActor `protobuf:"bytes,3,opt,name=spirl_admin,json=spirlAdmin,proto3,oneof"`
}

func (*Actor_User) isActor_Actor() {}

func (*Actor_ServiceAccount) isActor_Actor() {}

func (*Actor_SpirlAdmin) isActor_Actor() {}

type UserActor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the user.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. The email of the user.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserActor) Reset() {
	*x = UserActor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActor) ProtoMessage() {}

func (x *UserActor) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActor.ProtoReflect.Descriptor instead.
func (*UserActor) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{5}
}

func (x *UserActor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserActor) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ServiceAccountActor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the service account.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. The email of the service account.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The service account key id.
	KeyId string `protobuf:"bytes,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *ServiceAccountActor) Reset() {
	*x = ServiceAccountActor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAccountActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAccountActor) ProtoMessage() {}

func (x *ServiceAccountActor) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAccountActor.ProtoReflect.Descriptor instead.
func (*ServiceAccountActor) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{6}
}

func (x *ServiceAccountActor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceAccountActor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceAccountActor) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type TrustDomain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the trust domain.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. The name of the trust domain.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TrustDomain) Reset() {
	*x = TrustDomain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustDomain) ProtoMessage() {}

func (x *TrustDomain) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustDomain.ProtoReflect.Descriptor instead.
func (*TrustDomain) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{7}
}

func (x *TrustDomain) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TrustDomain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AuditLogFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by the trust domain ID.
	// If not set, will return containing any trust domain ID (including empty).
	ByTrustDomainId *string `protobuf:"bytes,1,opt,name=by_trust_domain_id,json=byTrustDomainId,proto3,oneof" json:"by_trust_domain_id,omitempty"`
	// Filter by the trust domain name.
	ByTrustDomainName *string `protobuf:"bytes,2,opt,name=by_trust_domain_name,json=byTrustDomainName,proto3,oneof" json:"by_trust_domain_name,omitempty"`
	// Filter by the request ID.
	ByRequestId *string `protobuf:"bytes,3,opt,name=by_request_id,json=byRequestId,proto3,oneof" json:"by_request_id,omitempty"`
	// Filter by the audit log source.
	BySource *AuditLogSource `protobuf:"varint,4,opt,name=by_source,json=bySource,proto3,enum=com.spirl.api.v1.access.AuditLogSource,oneof" json:"by_source,omitempty"`
	// Filter by gRPC service name.
	// The name must be in the format of "com.spirl.api.v1.<service_name>.API".
	ByService *string `protobuf:"bytes,5,opt,name=by_service,json=byService,proto3,oneof" json:"by_service,omitempty"`
	// Filter by the gRPC method name.
	ByMethod *string `protobuf:"bytes,6,opt,name=by_method,json=byMethod,proto3,oneof" json:"by_method,omitempty"`
	// Filter by the actor ID.
	ByActorId *string `protobuf:"bytes,7,opt,name=by_actor_id,json=byActorId,proto3,oneof" json:"by_actor_id,omitempty"`
	// Filter by the actor type.
	ByActorType *AuditLogActorType `protobuf:"varint,8,opt,name=by_actor_type,json=byActorType,proto3,enum=com.spirl.api.v1.access.AuditLogActorType,oneof" json:"by_actor_type,omitempty"`
	// Filter by the actor email.
	ByActorEmail *string `protobuf:"bytes,9,opt,name=by_actor_email,json=byActorEmail,proto3,oneof" json:"by_actor_email,omitempty"`
	// Filter by the actor name.
	ByActorName *string `protobuf:"bytes,10,opt,name=by_actor_name,json=byActorName,proto3,oneof" json:"by_actor_name,omitempty"`
	// Filter by the actor key ID.
	ByActorKeyId *string `protobuf:"bytes,11,opt,name=by_actor_key_id,json=byActorKeyId,proto3,oneof" json:"by_actor_key_id,omitempty"`
	// Filter by the status code.
	// If a negative value is set, will filter logs with null status code.
	ByStatusCode *int32 `protobuf:"varint,12,opt,name=by_status_code,json=byStatusCode,proto3,oneof" json:"by_status_code,omitempty"`
}

func (x *AuditLogFilter) Reset() {
	*x = AuditLogFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogFilter) ProtoMessage() {}

func (x *AuditLogFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogFilter.ProtoReflect.Descriptor instead.
func (*AuditLogFilter) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{8}
}

func (x *AuditLogFilter) GetByTrustDomainId() string {
	if x != nil && x.ByTrustDomainId != nil {
		return *x.ByTrustDomainId
	}
	return ""
}

func (x *AuditLogFilter) GetByTrustDomainName() string {
	if x != nil && x.ByTrustDomainName != nil {
		return *x.ByTrustDomainName
	}
	return ""
}

func (x *AuditLogFilter) GetByRequestId() string {
	if x != nil && x.ByRequestId != nil {
		return *x.ByRequestId
	}
	return ""
}

func (x *AuditLogFilter) GetBySource() AuditLogSource {
	if x != nil && x.BySource != nil {
		return *x.BySource
	}
	return AuditLogSource_AUDIT_LOG_SOURCE_UNKNOWN
}

func (x *AuditLogFilter) GetByService() string {
	if x != nil && x.ByService != nil {
		return *x.ByService
	}
	return ""
}

func (x *AuditLogFilter) GetByMethod() string {
	if x != nil && x.ByMethod != nil {
		return *x.ByMethod
	}
	return ""
}

func (x *AuditLogFilter) GetByActorId() string {
	if x != nil && x.ByActorId != nil {
		return *x.ByActorId
	}
	return ""
}

func (x *AuditLogFilter) GetByActorType() AuditLogActorType {
	if x != nil && x.ByActorType != nil {
		return *x.ByActorType
	}
	return AuditLogActorType_AUDIT_LOG_ACTOR_TYPE_UNKNOWN
}

func (x *AuditLogFilter) GetByActorEmail() string {
	if x != nil && x.ByActorEmail != nil {
		return *x.ByActorEmail
	}
	return ""
}

func (x *AuditLogFilter) GetByActorName() string {
	if x != nil && x.ByActorName != nil {
		return *x.ByActorName
	}
	return ""
}

func (x *AuditLogFilter) GetByActorKeyId() string {
	if x != nil && x.ByActorKeyId != nil {
		return *x.ByActorKeyId
	}
	return ""
}

func (x *AuditLogFilter) GetByStatusCode() int32 {
	if x != nil && x.ByStatusCode != nil {
		return *x.ByStatusCode
	}
	return 0
}

type ListOrgRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListOrgRolesRequest) Reset() {
	*x = ListOrgRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgRolesRequest) ProtoMessage() {}

func (x *ListOrgRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgRolesRequest.ProtoReflect.Descriptor instead.
func (*ListOrgRolesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{9}
}

type ListOrgRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*OrgRole `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ListOrgRolesResponse) Reset() {
	*x = ListOrgRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgRolesResponse) ProtoMessage() {}

func (x *ListOrgRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgRolesResponse.ProtoReflect.Descriptor instead.
func (*ListOrgRolesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{10}
}

func (x *ListOrgRolesResponse) GetRoles() []*OrgRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

type RenewUserInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the user invitation.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional. The duration of the invitation. If not set, a default duration is
	// used.
	Ttl *durationpb.Duration `protobuf:"bytes,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *RenewUserInvitationRequest) Reset() {
	*x = RenewUserInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewUserInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewUserInvitationRequest) ProtoMessage() {}

func (x *RenewUserInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewUserInvitationRequest.ProtoReflect.Descriptor instead.
func (*RenewUserInvitationRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{11}
}

func (x *RenewUserInvitationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RenewUserInvitationRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type RenewUserInvitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The renewed invitation to the organization.
	Invitation *UserInvitation `protobuf:"bytes,1,opt,name=invitation,proto3" json:"invitation,omitempty"`
}

func (x *RenewUserInvitationResponse) Reset() {
	*x = RenewUserInvitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewUserInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewUserInvitationResponse) ProtoMessage() {}

func (x *RenewUserInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewUserInvitationResponse.ProtoReflect.Descriptor instead.
func (*RenewUserInvitationResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{12}
}

func (x *RenewUserInvitationResponse) GetInvitation() *UserInvitation {
	if x != nil {
		return x.Invitation
	}
	return nil
}

type CreateUserInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The email address of the user.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Required. The ID of the role to assign the user to.
	RoleId string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// Optional. The duration of the invitation. If not set, a default duration is
	// used.
	Ttl *durationpb.Duration `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *CreateUserInvitationRequest) Reset() {
	*x = CreateUserInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserInvitationRequest) ProtoMessage() {}

func (x *CreateUserInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserInvitationRequest.ProtoReflect.Descriptor instead.
func (*CreateUserInvitationRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{13}
}

func (x *CreateUserInvitationRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserInvitationRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *CreateUserInvitationRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type CreateUserInvitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The invitation to the organization.
	Invitation *UserInvitation `protobuf:"bytes,1,opt,name=invitation,proto3" json:"invitation,omitempty"`
}

func (x *CreateUserInvitationResponse) Reset() {
	*x = CreateUserInvitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserInvitationResponse) ProtoMessage() {}

func (x *CreateUserInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserInvitationResponse.ProtoReflect.Descriptor instead.
func (*CreateUserInvitationResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{14}
}

func (x *CreateUserInvitationResponse) GetInvitation() *UserInvitation {
	if x != nil {
		return x.Invitation
	}
	return nil
}

type DeleteUserInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the user invitation.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserInvitationRequest) Reset() {
	*x = DeleteUserInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserInvitationRequest) ProtoMessage() {}

func (x *DeleteUserInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserInvitationRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserInvitationRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteUserInvitationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteUserInvitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserInvitationResponse) Reset() {
	*x = DeleteUserInvitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserInvitationResponse) ProtoMessage() {}

func (x *DeleteUserInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserInvitationResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserInvitationResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{16}
}

type ListUserInvitationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUserInvitationsRequest) Reset() {
	*x = ListUserInvitationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserInvitationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserInvitationsRequest) ProtoMessage() {}

func (x *ListUserInvitationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserInvitationsRequest.ProtoReflect.Descriptor instead.
func (*ListUserInvitationsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{17}
}

type ListUserInvitationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user invitations.
	Invitations []*UserInvitation `protobuf:"bytes,1,rep,name=invitations,proto3" json:"invitations,omitempty"`
}

func (x *ListUserInvitationsResponse) Reset() {
	*x = ListUserInvitationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserInvitationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserInvitationsResponse) ProtoMessage() {}

func (x *ListUserInvitationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserInvitationsResponse.ProtoReflect.Descriptor instead.
func (*ListUserInvitationsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{18}
}

func (x *ListUserInvitationsResponse) GetInvitations() []*UserInvitation {
	if x != nil {
		return x.Invitations
	}
	return nil
}

type ListUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Filters the users list by the given email.
	ByEmail string `protobuf:"bytes,1,opt,name=by_email,json=byEmail,proto3" json:"by_email,omitempty"`
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{19}
}

func (x *ListUsersRequest) GetByEmail() string {
	if x != nil {
		return x.ByEmail
	}
	return ""
}

type ListUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of (optionally filtered) users.
	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{20}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type UpdateUserRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the organization user to update the role on.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. The ID of the role to apply.
	RoleId string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *UpdateUserRoleRequest) Reset() {
	*x = UpdateUserRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleRequest) ProtoMessage() {}

func (x *UpdateUserRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateUserRoleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateUserRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type UpdateUserRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserRoleResponse) Reset() {
	*x = UpdateUserRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleResponse) ProtoMessage() {}

func (x *UpdateUserRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{22}
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the organization user to delete.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{24}
}

type CreateServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The name of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional. The description of the service account.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. The role of the service account. The role must not have more
	// permissions than the role of the authenticated user. If no role is given,
	// the role of the authenticated user is used.
	RoleId string `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *CreateServiceAccountRequest) Reset() {
	*x = CreateServiceAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceAccountRequest) ProtoMessage() {}

func (x *CreateServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{25}
}

func (x *CreateServiceAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServiceAccountRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateServiceAccountRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type CreateServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The created service account.
	ServiceAccount *ServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *CreateServiceAccountResponse) Reset() {
	*x = CreateServiceAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceAccountResponse) ProtoMessage() {}

func (x *CreateServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{26}
}

func (x *CreateServiceAccountResponse) GetServiceAccount() *ServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

type ListServiceAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The name of the service account to filter by.
	ByName string `protobuf:"bytes,1,opt,name=by_name,json=byName,proto3" json:"by_name,omitempty"`
}

func (x *ListServiceAccountsRequest) Reset() {
	*x = ListServiceAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceAccountsRequest) ProtoMessage() {}

func (x *ListServiceAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListServiceAccountsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{27}
}

func (x *ListServiceAccountsRequest) GetByName() string {
	if x != nil {
		return x.ByName
	}
	return ""
}

type ListServiceAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The list of service accounts.
	ServiceAccounts []*ServiceAccount `protobuf:"bytes,1,rep,name=service_accounts,json=serviceAccounts,proto3" json:"service_accounts,omitempty"`
}

func (x *ListServiceAccountsResponse) Reset() {
	*x = ListServiceAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceAccountsResponse) ProtoMessage() {}

func (x *ListServiceAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListServiceAccountsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{28}
}

func (x *ListServiceAccountsResponse) GetServiceAccounts() []*ServiceAccount {
	if x != nil {
		return x.ServiceAccounts
	}
	return nil
}

type GetServiceAccountInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The id of the service account.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetServiceAccountInfoRequest) Reset() {
	*x = GetServiceAccountInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceAccountInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceAccountInfoRequest) ProtoMessage() {}

func (x *GetServiceAccountInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceAccountInfoRequest.ProtoReflect.Descriptor instead.
func (*GetServiceAccountInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{29}
}

func (x *GetServiceAccountInfoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetServiceAccountInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The service account.
	ServiceAccount *ServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// Optional. The list of service account keys.
	ServiceAccountKeys []*ServiceAccountKey `protobuf:"bytes,2,rep,name=service_account_keys,json=serviceAccountKeys,proto3" json:"service_account_keys,omitempty"`
}

func (x *GetServiceAccountInfoResponse) Reset() {
	*x = GetServiceAccountInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceAccountInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceAccountInfoResponse) ProtoMessage() {}

func (x *GetServiceAccountInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceAccountInfoResponse.ProtoReflect.Descriptor instead.
func (*GetServiceAccountInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{30}
}

func (x *GetServiceAccountInfoResponse) GetServiceAccount() *ServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

func (x *GetServiceAccountInfoResponse) GetServiceAccountKeys() []*ServiceAccountKey {
	if x != nil {
		return x.ServiceAccountKeys
	}
	return nil
}

type UpdateServiceAccountRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The id of the service account.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. The new role ID of the service account. The role must not have
	// more permissions than the role of the authenticated user.
	RoleId string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *UpdateServiceAccountRoleRequest) Reset() {
	*x = UpdateServiceAccountRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceAccountRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceAccountRoleRequest) ProtoMessage() {}

func (x *UpdateServiceAccountRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceAccountRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceAccountRoleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateServiceAccountRoleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateServiceAccountRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type UpdateServiceAccountRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The updated service account.
	ServiceAccount *ServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *UpdateServiceAccountRoleResponse) Reset() {
	*x = UpdateServiceAccountRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceAccountRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceAccountRoleResponse) ProtoMessage() {}

func (x *UpdateServiceAccountRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceAccountRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateServiceAccountRoleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateServiceAccountRoleResponse) GetServiceAccount() *ServiceAccount {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

type DeleteServiceAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The id of the service account to be deleted.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional. If set to true, the service account will be deleted even if it
	// has active keys.
	Force bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *DeleteServiceAccountRequest) Reset() {
	*x = DeleteServiceAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServiceAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceAccountRequest) ProtoMessage() {}

func (x *DeleteServiceAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteServiceAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteServiceAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteServiceAccountRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type DeleteServiceAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServiceAccountResponse) Reset() {
	*x = DeleteServiceAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServiceAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceAccountResponse) ProtoMessage() {}

func (x *DeleteServiceAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteServiceAccountResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{34}
}

type CreateServiceAccountKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The id of the service account the key should be added to.
	ServiceAccountId string `protobuf:"bytes,1,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Required. The public key of the service account key.
	//
	// Types that are assignable to PubKey:
	//
	//	*CreateServiceAccountKeyRequest_PkixPubkey
	PubKey isCreateServiceAccountKeyRequest_PubKey `protobuf_oneof:"pub_key"`
}

func (x *CreateServiceAccountKeyRequest) Reset() {
	*x = CreateServiceAccountKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceAccountKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceAccountKeyRequest) ProtoMessage() {}

func (x *CreateServiceAccountKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceAccountKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceAccountKeyRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{35}
}

func (x *CreateServiceAccountKeyRequest) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (m *CreateServiceAccountKeyRequest) GetPubKey() isCreateServiceAccountKeyRequest_PubKey {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (x *CreateServiceAccountKeyRequest) GetPkixPubkey() *PKIXPublicKey {
	if x, ok := x.GetPubKey().(*CreateServiceAccountKeyRequest_PkixPubkey); ok {
		return x.PkixPubkey
	}
	return nil
}

type isCreateServiceAccountKeyRequest_PubKey interface {
	isCreateServiceAccountKeyRequest_PubKey()
}

type CreateServiceAccountKeyRequest_PkixPubkey struct {
	// The public key of the service account key in PKIX, ASN.1 DER form.
	PkixPubkey *PKIXPublicKey `protobuf:"bytes,2,opt,name=pkix_pubkey,json=pkixPubkey,proto3,oneof"`
}

func (*CreateServiceAccountKeyRequest_PkixPubkey) isCreateServiceAccountKeyRequest_PubKey() {}

type CreateServiceAccountKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The created service account key.
	ServiceAccountKey *ServiceAccountKey `protobuf:"bytes,1,opt,name=service_account_key,json=serviceAccountKey,proto3" json:"service_account_key,omitempty"`
}

func (x *CreateServiceAccountKeyResponse) Reset() {
	*x = CreateServiceAccountKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceAccountKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceAccountKeyResponse) ProtoMessage() {}

func (x *CreateServiceAccountKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceAccountKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateServiceAccountKeyResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{36}
}

func (x *CreateServiceAccountKeyResponse) GetServiceAccountKey() *ServiceAccountKey {
	if x != nil {
		return x.ServiceAccountKey
	}
	return nil
}

type DeleteServiceAccountKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The id of the service account key.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional. If set to true, the service account key will be deleted even if
	// it is active.
	Force bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *DeleteServiceAccountKeyRequest) Reset() {
	*x = DeleteServiceAccountKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServiceAccountKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceAccountKeyRequest) ProtoMessage() {}

func (x *DeleteServiceAccountKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceAccountKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteServiceAccountKeyRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteServiceAccountKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteServiceAccountKeyRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type DeleteServiceAccountKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteServiceAccountKeyResponse) Reset() {
	*x = DeleteServiceAccountKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServiceAccountKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceAccountKeyResponse) ProtoMessage() {}

func (x *DeleteServiceAccountKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceAccountKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteServiceAccountKeyResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{38}
}

type UpdateServiceAccountKeyStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The id of the service account key.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. Flag indicating if the key should be active or not.
	IsActive bool `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *UpdateServiceAccountKeyStatusRequest) Reset() {
	*x = UpdateServiceAccountKeyStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceAccountKeyStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceAccountKeyStatusRequest) ProtoMessage() {}

func (x *UpdateServiceAccountKeyStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceAccountKeyStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceAccountKeyStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateServiceAccountKeyStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateServiceAccountKeyStatusRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type UpdateServiceAccountKeyStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The updated service account key.
	ServiceAccountKey *ServiceAccountKey `protobuf:"bytes,1,opt,name=service_account_key,json=serviceAccountKey,proto3" json:"service_account_key,omitempty"`
}

func (x *UpdateServiceAccountKeyStatusResponse) Reset() {
	*x = UpdateServiceAccountKeyStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceAccountKeyStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceAccountKeyStatusResponse) ProtoMessage() {}

func (x *UpdateServiceAccountKeyStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceAccountKeyStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateServiceAccountKeyStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateServiceAccountKeyStatusResponse) GetServiceAccountKey() *ServiceAccountKey {
	if x != nil {
		return x.ServiceAccountKey
	}
	return nil
}

type OrgRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the organization role.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the organization role.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *OrgRole) Reset() {
	*x = OrgRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgRole) ProtoMessage() {}

func (x *OrgRole) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgRole.ProtoReflect.Descriptor instead.
func (*OrgRole) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{41}
}

func (x *OrgRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrgRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the user.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The email of the user.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// The name of the user.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The role of the user in the organization.
	Role *OrgRole `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	// SSO provider of the user.
	SsoProvider string `protobuf:"bytes,5,opt,name=sso_provider,json=ssoProvider,proto3" json:"sso_provider,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{42}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetRole() *OrgRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *User) GetSsoProvider() string {
	if x != nil {
		return x.SsoProvider
	}
	return ""
}

type UserInvitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the user invitation.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The email of the user being invited.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// The role to give the invited user.
	Role *OrgRole `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	// The code used to accept the invitation during login.
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// When the invitation was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// When the invitation expires.
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// The user who created the invitation.
	CreatedBy string `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// The URL used to accept the invitation if using web login.
	Url string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UserInvitation) Reset() {
	*x = UserInvitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInvitation) ProtoMessage() {}

func (x *UserInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInvitation.ProtoReflect.Descriptor instead.
func (*UserInvitation) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{43}
}

func (x *UserInvitation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInvitation) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInvitation) GetRole() *OrgRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *UserInvitation) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserInvitation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserInvitation) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *UserInvitation) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *UserInvitation) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ServiceAccountKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the service account key.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The id of the service account the key belongs to.
	ServiceAccountId string `protobuf:"bytes,2,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Flag indicating if the key is active and can be used for authenticating.
	IsActive bool `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// The public key of the service account key.
	PublicKey *PKIXPublicKey `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// The creation time of the service account key.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ServiceAccountKey) Reset() {
	*x = ServiceAccountKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAccountKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAccountKey) ProtoMessage() {}

func (x *ServiceAccountKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAccountKey.ProtoReflect.Descriptor instead.
func (*ServiceAccountKey) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{44}
}

func (x *ServiceAccountKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceAccountKey) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *ServiceAccountKey) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ServiceAccountKey) GetPublicKey() *PKIXPublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ServiceAccountKey) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ServiceAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the service account.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the service account.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The description of the service account.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The role of the service account.
	RoleId string `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The creation time of the service account.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The user who created the service account.
	CreatedBy *CreatedBy `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *ServiceAccount) Reset() {
	*x = ServiceAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAccount) ProtoMessage() {}

func (x *ServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAccount.ProtoReflect.Descriptor instead.
func (*ServiceAccount) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{45}
}

func (x *ServiceAccount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceAccount) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceAccount) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *ServiceAccount) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ServiceAccount) GetCreatedBy() *CreatedBy {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

type CreatedBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the user who created the resource.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The email of the user who created the resource.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CreatedBy) Reset() {
	*x = CreatedBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedBy) ProtoMessage() {}

func (x *CreatedBy) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedBy.ProtoReflect.Descriptor instead.
func (*CreatedBy) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{46}
}

func (x *CreatedBy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreatedBy) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// Represents a public key in PKIX, ASN.1 DER form.
type PKIXPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key bytes in PKIX, ASN.1 DER form.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PKIXPublicKey) Reset() {
	*x = PKIXPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_accessapi_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PKIXPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PKIXPublicKey) ProtoMessage() {}

func (x *PKIXPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_accessapi_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PKIXPublicKey.ProtoReflect.Descriptor instead.
func (*PKIXPublicKey) Descriptor() ([]byte, []int) {
	return file_api_v1_accessapi_api_proto_rawDescGZIP(), []int{47}
}

func (x *PKIXPublicKey) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_api_v1_accessapi_api_proto protoreflect.FileDescriptor

var file_api_v1_accessapi_api_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x76, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x6f,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x85, 0x02, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0xf9, 0x02, 0x0a, 0x08, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x34,
	0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73,
	0x12, 0x47, 0x0a, 0x0c, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x0b, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x05, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x57,
	0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70,
	0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0b, 0x73, 0x70, 0x69, 0x72, 0x6c,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x0a, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x07,
	0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x31, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x50, 0x0a, 0x13, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0b,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xb2, 0x06, 0x0a, 0x0e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x12, 0x62, 0x79, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0f, 0x62, 0x79, 0x54, 0x72, 0x75, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x62, 0x79, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x11, 0x62, 0x79, 0x54, 0x72, 0x75, 0x73, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x62, 0x79,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0b, 0x62, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x09, 0x62, 0x79, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48,
	0x03, 0x52, 0x08, 0x62, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x62, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x62, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x62, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x62, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x62, 0x79, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x0d, 0x62, 0x79, 0x5f,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x4c, 0x6f, 0x67, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x07, 0x52, 0x0b,
	0x62, 0x79, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29,
	0x0a, 0x0e, 0x62, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0c, 0x62, 0x79, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x62, 0x79, 0x5f,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x09, 0x52, 0x0b, 0x62, 0x79, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0f, 0x62, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0c, 0x62,
	0x79, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29,
	0x0a, 0x0e, 0x62, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0b, 0x52, 0x0c, 0x62, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x62, 0x79,
	0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x42, 0x17, 0x0a, 0x15, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x79,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x62, 0x79, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x79,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x79, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x62, 0x79, 0x5f,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x62, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x67,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x1a, 0x52,
	0x65, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x66, 0x0a, 0x1b, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7b,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x00, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x67, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x68, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72,
	0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2f, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x00, 0x52, 0x07, 0x62, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x48, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x40, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a,
	0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x35, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x71, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x2e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x14, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x4a, 0x0a, 0x1f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x1b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xa4, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x49, 0x0a, 0x0b, 0x70, 0x6b, 0x69, 0x78, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x50, 0x4b, 0x49, 0x58, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x48, 0x00,
	0x52, 0x0a, 0x70, 0x6b, 0x69, 0x78, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x42, 0x09, 0x0a, 0x07,
	0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x7d, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70,
	0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x46, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x21,
	0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x53, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5a, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x2d, 0x0a, 0x07,
	0x4f, 0x72, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x73, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x73, 0x6f, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xa7, 0x02, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x34, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x67, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0xf0, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x50, 0x4b, 0x49, 0x58, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xed, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72,
	0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x22, 0x31, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x23, 0x0a, 0x0d, 0x50, 0x4b, 0x49, 0x58, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x69, 0x0a, 0x0e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x18, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a,
	0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x41, 0x55, 0x54, 0x4f, 0x4d, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x9e, 0x01, 0x0a, 0x11, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x1c, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x41, 0x43, 0x54, 0x4f, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x1d, 0x0a, 0x19, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x41, 0x43, 0x54,
	0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x28,
	0x0a, 0x24, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x41, 0x43, 0x54, 0x4f,
	0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x55, 0x44, 0x49,
	0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x03, 0x32, 0x9d, 0x11, 0x0a, 0x03, 0x41, 0x50, 0x49,
	0x12, 0x6b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72,
	0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x71, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70,
	0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x33, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70,
	0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8f, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x38, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70,
	0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70,
	0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2f, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_v1_accessapi_api_proto_rawDescOnce sync.Once
	file_api_v1_accessapi_api_proto_rawDescData = file_api_v1_accessapi_api_proto_rawDesc
)

func file_api_v1_accessapi_api_proto_rawDescGZIP() []byte {
	file_api_v1_accessapi_api_proto_rawDescOnce.Do(func() {
		file_api_v1_accessapi_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_accessapi_api_proto_rawDescData)
	})
	return file_api_v1_accessapi_api_proto_rawDescData
}

var file_api_v1_accessapi_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v1_accessapi_api_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_api_v1_accessapi_api_proto_goTypes = []any{
	(AuditLogSource)(0),                           // 0: com.spirl.api.v1.access.AuditLogSource
	(AuditLogActorType)(0),                        // 1: com.spirl.api.v1.access.AuditLogActorType
	(*ListAuditLogsResponse)(nil),                 // 2: com.spirl.api.v1.access.ListAuditLogsResponse
	(*ListAuditLogsRequest)(nil),                  // 3: com.spirl.api.v1.access.ListAuditLogsRequest
	(*AuditLog)(nil),                              // 4: com.spirl.api.v1.access.AuditLog
	(*Request)(nil),                               // 5: com.spirl.api.v1.access.Request
	(*Actor)(nil),                                 // 6: com.spirl.api.v1.access.Actor
	(*UserActor)(nil),                             // 7: com.spirl.api.v1.access.UserActor
	(*ServiceAccountActor)(nil),                   // 8: com.spirl.api.v1.access.ServiceAccountActor
	(*TrustDomain)(nil),                           // 9: com.spirl.api.v1.access.TrustDomain
	(*AuditLogFilter)(nil),                        // 10: com.spirl.api.v1.access.AuditLogFilter
	(*ListOrgRolesRequest)(nil),                   // 11: com.spirl.api.v1.access.ListOrgRolesRequest
	(*ListOrgRolesResponse)(nil),                  // 12: com.spirl.api.v1.access.ListOrgRolesResponse
	(*RenewUserInvitationRequest)(nil),            // 13: com.spirl.api.v1.access.RenewUserInvitationRequest
	(*RenewUserInvitationResponse)(nil),           // 14: com.spirl.api.v1.access.RenewUserInvitationResponse
	(*CreateUserInvitationRequest)(nil),           // 15: com.spirl.api.v1.access.CreateUserInvitationRequest
	(*CreateUserInvitationResponse)(nil),          // 16: com.spirl.api.v1.access.CreateUserInvitationResponse
	(*DeleteUserInvitationRequest)(nil),           // 17: com.spirl.api.v1.access.DeleteUserInvitationRequest
	(*DeleteUserInvitationResponse)(nil),          // 18: com.spirl.api.v1.access.DeleteUserInvitationResponse
	(*ListUserInvitationsRequest)(nil),            // 19: com.spirl.api.v1.access.ListUserInvitationsRequest
	(*ListUserInvitationsResponse)(nil),           // 20: com.spirl.api.v1.access.ListUserInvitationsResponse
	(*ListUsersRequest)(nil),                      // 21: com.spirl.api.v1.access.ListUsersRequest
	(*ListUsersResponse)(nil),                     // 22: com.spirl.api.v1.access.ListUsersResponse
	(*UpdateUserRoleRequest)(nil),                 // 23: com.spirl.api.v1.access.UpdateUserRoleRequest
	(*UpdateUserRoleResponse)(nil),                // 24: com.spirl.api.v1.access.UpdateUserRoleResponse
	(*DeleteUserRequest)(nil),                     // 25: com.spirl.api.v1.access.DeleteUserRequest
	(*DeleteUserResponse)(nil),                    // 26: com.spirl.api.v1.access.DeleteUserResponse
	(*CreateServiceAccountRequest)(nil),           // 27: com.spirl.api.v1.access.CreateServiceAccountRequest
	(*CreateServiceAccountResponse)(nil),          // 28: com.spirl.api.v1.access.CreateServiceAccountResponse
	(*ListServiceAccountsRequest)(nil),            // 29: com.spirl.api.v1.access.ListServiceAccountsRequest
	(*ListServiceAccountsResponse)(nil),           // 30: com.spirl.api.v1.access.ListServiceAccountsResponse
	(*GetServiceAccountInfoRequest)(nil),          // 31: com.spirl.api.v1.access.GetServiceAccountInfoRequest
	(*GetServiceAccountInfoResponse)(nil),         // 32: com.spirl.api.v1.access.GetServiceAccountInfoResponse
	(*UpdateServiceAccountRoleRequest)(nil),       // 33: com.spirl.api.v1.access.UpdateServiceAccountRoleRequest
	(*UpdateServiceAccountRoleResponse)(nil),      // 34: com.spirl.api.v1.access.UpdateServiceAccountRoleResponse
	(*DeleteServiceAccountRequest)(nil),           // 35: com.spirl.api.v1.access.DeleteServiceAccountRequest
	(*DeleteServiceAccountResponse)(nil),          // 36: com.spirl.api.v1.access.DeleteServiceAccountResponse
	(*CreateServiceAccountKeyRequest)(nil),        // 37: com.spirl.api.v1.access.CreateServiceAccountKeyRequest
	(*CreateServiceAccountKeyResponse)(nil),       // 38: com.spirl.api.v1.access.CreateServiceAccountKeyResponse
	(*DeleteServiceAccountKeyRequest)(nil),        // 39: com.spirl.api.v1.access.DeleteServiceAccountKeyRequest
	(*DeleteServiceAccountKeyResponse)(nil),       // 40: com.spirl.api.v1.access.DeleteServiceAccountKeyResponse
	(*UpdateServiceAccountKeyStatusRequest)(nil),  // 41: com.spirl.api.v1.access.UpdateServiceAccountKeyStatusRequest
	(*UpdateServiceAccountKeyStatusResponse)(nil), // 42: com.spirl.api.v1.access.UpdateServiceAccountKeyStatusResponse
	(*OrgRole)(nil),                               // 43: com.spirl.api.v1.access.OrgRole
	(*User)(nil),                                  // 44: com.spirl.api.v1.access.User
	(*UserInvitation)(nil),                        // 45: com.spirl.api.v1.access.UserInvitation
	(*ServiceAccountKey)(nil),                     // 46: com.spirl.api.v1.access.ServiceAccountKey
	(*ServiceAccount)(nil),                        // 47: com.spirl.api.v1.access.ServiceAccount
	(*CreatedBy)(nil),                             // 48: com.spirl.api.v1.access.CreatedBy
	(*PKIXPublicKey)(nil),                         // 49: com.spirl.api.v1.access.PKIXPublicKey
	(*timestamppb.Timestamp)(nil),                 // 50: google.protobuf.Timestamp
	(*anypb.Any)(nil),                             // 51: google.protobuf.Any
	(*durationpb.Duration)(nil),                   // 52: google.protobuf.Duration
}
var file_api_v1_accessapi_api_proto_depIdxs = []int32{
	4,  // 0: com.spirl.api.v1.access.ListAuditLogsResponse.logs:type_name -> com.spirl.api.v1.access.AuditLog
	10, // 1: com.spirl.api.v1.access.ListAuditLogsRequest.filter:type_name -> com.spirl.api.v1.access.AuditLogFilter
	50, // 2: com.spirl.api.v1.access.ListAuditLogsRequest.start_time:type_name -> google.protobuf.Timestamp
	50, // 3: com.spirl.api.v1.access.ListAuditLogsRequest.end_time:type_name -> google.protobuf.Timestamp
	6,  // 4: com.spirl.api.v1.access.AuditLog.actor:type_name -> com.spirl.api.v1.access.Actor
	50, // 5: com.spirl.api.v1.access.AuditLog.ts:type_name -> google.protobuf.Timestamp
	9,  // 6: com.spirl.api.v1.access.AuditLog.trust_domain:type_name -> com.spirl.api.v1.access.TrustDomain
	0,  // 7: com.spirl.api.v1.access.AuditLog.source:type_name -> com.spirl.api.v1.access.AuditLogSource
	5,  // 8: com.spirl.api.v1.access.AuditLog.request:type_name -> com.spirl.api.v1.access.Request
	51, // 9: com.spirl.api.v1.access.Request.message:type_name -> google.protobuf.Any
	7,  // 10: com.spirl.api.v1.access.Actor.user:type_name -> com.spirl.api.v1.access.UserActor
	8,  // 11: com.spirl.api.v1.access.Actor.service_account:type_name -> com.spirl.api.v1.access.ServiceAccountActor
	7,  // 12: com.spirl.api.v1.access.Actor.spirl_admin:type_name -> com.spirl.api.v1.access.UserActor
	0,  // 13: com.spirl.api.v1.access.AuditLogFilter.by_source:type_name -> com.spirl.api.v1.access.AuditLogSource
	1,  // 14: com.spirl.api.v1.access.AuditLogFilter.by_actor_type:type_name -> com.spirl.api.v1.access.AuditLogActorType
	43, // 15: com.spirl.api.v1.access.ListOrgRolesResponse.roles:type_name -> com.spirl.api.v1.access.OrgRole
	52, // 16: com.spirl.api.v1.access.RenewUserInvitationRequest.ttl:type_name -> google.protobuf.Duration
	45, // 17: com.spirl.api.v1.access.RenewUserInvitationResponse.invitation:type_name -> com.spirl.api.v1.access.UserInvitation
	52, // 18: com.spirl.api.v1.access.CreateUserInvitationRequest.ttl:type_name -> google.protobuf.Duration
	45, // 19: com.spirl.api.v1.access.CreateUserInvitationResponse.invitation:type_name -> com.spirl.api.v1.access.UserInvitation
	45, // 20: com.spirl.api.v1.access.ListUserInvitationsResponse.invitations:type_name -> com.spirl.api.v1.access.UserInvitation
	44, // 21: com.spirl.api.v1.access.ListUsersResponse.users:type_name -> com.spirl.api.v1.access.User
	47, // 22: com.spirl.api.v1.access.CreateServiceAccountResponse.service_account:type_name -> com.spirl.api.v1.access.ServiceAccount
	47, // 23: com.spirl.api.v1.access.ListServiceAccountsResponse.service_accounts:type_name -> com.spirl.api.v1.access.ServiceAccount
	47, // 24: com.spirl.api.v1.access.GetServiceAccountInfoResponse.service_account:type_name -> com.spirl.api.v1.access.ServiceAccount
	46, // 25: com.spirl.api.v1.access.GetServiceAccountInfoResponse.service_account_keys:type_name -> com.spirl.api.v1.access.ServiceAccountKey
	47, // 26: com.spirl.api.v1.access.UpdateServiceAccountRoleResponse.service_account:type_name -> com.spirl.api.v1.access.ServiceAccount
	49, // 27: com.spirl.api.v1.access.CreateServiceAccountKeyRequest.pkix_pubkey:type_name -> com.spirl.api.v1.access.PKIXPublicKey
	46, // 28: com.spirl.api.v1.access.CreateServiceAccountKeyResponse.service_account_key:type_name -> com.spirl.api.v1.access.ServiceAccountKey
	46, // 29: com.spirl.api.v1.access.UpdateServiceAccountKeyStatusResponse.service_account_key:type_name -> com.spirl.api.v1.access.ServiceAccountKey
	43, // 30: com.spirl.api.v1.access.User.role:type_name -> com.spirl.api.v1.access.OrgRole
	43, // 31: com.spirl.api.v1.access.UserInvitation.role:type_name -> com.spirl.api.v1.access.OrgRole
	50, // 32: com.spirl.api.v1.access.UserInvitation.created_at:type_name -> google.protobuf.Timestamp
	50, // 33: com.spirl.api.v1.access.UserInvitation.expires_at:type_name -> google.protobuf.Timestamp
	49, // 34: com.spirl.api.v1.access.ServiceAccountKey.public_key:type_name -> com.spirl.api.v1.access.PKIXPublicKey
	50, // 35: com.spirl.api.v1.access.ServiceAccountKey.created_at:type_name -> google.protobuf.Timestamp
	50, // 36: com.spirl.api.v1.access.ServiceAccount.created_at:type_name -> google.protobuf.Timestamp
	48, // 37: com.spirl.api.v1.access.ServiceAccount.created_by:type_name -> com.spirl.api.v1.access.CreatedBy
	11, // 38: com.spirl.api.v1.access.API.ListOrgRoles:input_type -> com.spirl.api.v1.access.ListOrgRolesRequest
	21, // 39: com.spirl.api.v1.access.API.ListUsers:input_type -> com.spirl.api.v1.access.ListUsersRequest
	23, // 40: com.spirl.api.v1.access.API.UpdateUserRole:input_type -> com.spirl.api.v1.access.UpdateUserRoleRequest
	25, // 41: com.spirl.api.v1.access.API.DeleteUser:input_type -> com.spirl.api.v1.access.DeleteUserRequest
	15, // 42: com.spirl.api.v1.access.API.CreateUserInvitation:input_type -> com.spirl.api.v1.access.CreateUserInvitationRequest
	13, // 43: com.spirl.api.v1.access.API.RenewUserInvitation:input_type -> com.spirl.api.v1.access.RenewUserInvitationRequest
	17, // 44: com.spirl.api.v1.access.API.DeleteUserInvitation:input_type -> com.spirl.api.v1.access.DeleteUserInvitationRequest
	19, // 45: com.spirl.api.v1.access.API.ListUserInvitations:input_type -> com.spirl.api.v1.access.ListUserInvitationsRequest
	27, // 46: com.spirl.api.v1.access.API.CreateServiceAccount:input_type -> com.spirl.api.v1.access.CreateServiceAccountRequest
	29, // 47: com.spirl.api.v1.access.API.ListServiceAccounts:input_type -> com.spirl.api.v1.access.ListServiceAccountsRequest
	31, // 48: com.spirl.api.v1.access.API.GetServiceAccountInfo:input_type -> com.spirl.api.v1.access.GetServiceAccountInfoRequest
	33, // 49: com.spirl.api.v1.access.API.UpdateServiceAccountRole:input_type -> com.spirl.api.v1.access.UpdateServiceAccountRoleRequest
	35, // 50: com.spirl.api.v1.access.API.DeleteServiceAccount:input_type -> com.spirl.api.v1.access.DeleteServiceAccountRequest
	37, // 51: com.spirl.api.v1.access.API.CreateServiceAccountKey:input_type -> com.spirl.api.v1.access.CreateServiceAccountKeyRequest
	39, // 52: com.spirl.api.v1.access.API.DeleteServiceAccountKey:input_type -> com.spirl.api.v1.access.DeleteServiceAccountKeyRequest
	41, // 53: com.spirl.api.v1.access.API.UpdateServiceAccountKeyStatus:input_type -> com.spirl.api.v1.access.UpdateServiceAccountKeyStatusRequest
	3,  // 54: com.spirl.api.v1.access.API.ListAuditLogs:input_type -> com.spirl.api.v1.access.ListAuditLogsRequest
	12, // 55: com.spirl.api.v1.access.API.ListOrgRoles:output_type -> com.spirl.api.v1.access.ListOrgRolesResponse
	22, // 56: com.spirl.api.v1.access.API.ListUsers:output_type -> com.spirl.api.v1.access.ListUsersResponse
	24, // 57: com.spirl.api.v1.access.API.UpdateUserRole:output_type -> com.spirl.api.v1.access.UpdateUserRoleResponse
	26, // 58: com.spirl.api.v1.access.API.DeleteUser:output_type -> com.spirl.api.v1.access.DeleteUserResponse
	16, // 59: com.spirl.api.v1.access.API.CreateUserInvitation:output_type -> com.spirl.api.v1.access.CreateUserInvitationResponse
	14, // 60: com.spirl.api.v1.access.API.RenewUserInvitation:output_type -> com.spirl.api.v1.access.RenewUserInvitationResponse
	18, // 61: com.spirl.api.v1.access.API.DeleteUserInvitation:output_type -> com.spirl.api.v1.access.DeleteUserInvitationResponse
	20, // 62: com.spirl.api.v1.access.API.ListUserInvitations:output_type -> com.spirl.api.v1.access.ListUserInvitationsResponse
	28, // 63: com.spirl.api.v1.access.API.CreateServiceAccount:output_type -> com.spirl.api.v1.access.CreateServiceAccountResponse
	30, // 64: com.spirl.api.v1.access.API.ListServiceAccounts:output_type -> com.spirl.api.v1.access.ListServiceAccountsResponse
	32, // 65: com.spirl.api.v1.access.API.GetServiceAccountInfo:output_type -> com.spirl.api.v1.access.GetServiceAccountInfoResponse
	34, // 66: com.spirl.api.v1.access.API.UpdateServiceAccountRole:output_type -> com.spirl.api.v1.access.UpdateServiceAccountRoleResponse
	36, // 67: com.spirl.api.v1.access.API.DeleteServiceAccount:output_type -> com.spirl.api.v1.access.DeleteServiceAccountResponse
	38, // 68: com.spirl.api.v1.access.API.CreateServiceAccountKey:output_type -> com.spirl.api.v1.access.CreateServiceAccountKeyResponse
	40, // 69: com.spirl.api.v1.access.API.DeleteServiceAccountKey:output_type -> com.spirl.api.v1.access.DeleteServiceAccountKeyResponse
	42, // 70: com.spirl.api.v1.access.API.UpdateServiceAccountKeyStatus:output_type -> com.spirl.api.v1.access.UpdateServiceAccountKeyStatusResponse
	2,  // 71: com.spirl.api.v1.access.API.ListAuditLogs:output_type -> com.spirl.api.v1.access.ListAuditLogsResponse
	55, // [55:72] is the sub-list for method output_type
	38, // [38:55] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_api_v1_accessapi_api_proto_init() }
func file_api_v1_accessapi_api_proto_init() {
	if File_api_v1_accessapi_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_accessapi_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListAuditLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListAuditLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AuditLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Actor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UserActor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceAccountActor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TrustDomain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AuditLogFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListOrgRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ListOrgRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*RenewUserInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*RenewUserInvitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserInvitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserInvitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ListUserInvitationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ListUserInvitationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ListUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ListUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CreateServiceAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CreateServiceAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ListServiceAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*ListServiceAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GetServiceAccountInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GetServiceAccountInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateServiceAccountRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateServiceAccountRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteServiceAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteServiceAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CreateServiceAccountKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CreateServiceAccountKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteServiceAccountKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteServiceAccountKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateServiceAccountKeyStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateServiceAccountKeyStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*OrgRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*UserInvitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceAccountKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*CreatedBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_accessapi_api_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*PKIXPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_accessapi_api_proto_msgTypes[2].OneofWrappers = []any{}
	file_api_v1_accessapi_api_proto_msgTypes[4].OneofWrappers = []any{
		(*Actor_User)(nil),
		(*Actor_ServiceAccount)(nil),
		(*Actor_SpirlAdmin)(nil),
	}
	file_api_v1_accessapi_api_proto_msgTypes[8].OneofWrappers = []any{}
	file_api_v1_accessapi_api_proto_msgTypes[35].OneofWrappers = []any{
		(*CreateServiceAccountKeyRequest_PkixPubkey)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_accessapi_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_accessapi_api_proto_goTypes,
		DependencyIndexes: file_api_v1_accessapi_api_proto_depIdxs,
		EnumInfos:         file_api_v1_accessapi_api_proto_enumTypes,
		MessageInfos:      file_api_v1_accessapi_api_proto_msgTypes,
	}.Build()
	File_api_v1_accessapi_api_proto = out.File
	file_api_v1_accessapi_api_proto_rawDesc = nil
	file_api_v1_accessapi_api_proto_goTypes = nil
	file_api_v1_accessapi_api_proto_depIdxs = nil
}
