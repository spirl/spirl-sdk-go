// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: api/v1/cicdapi/api.proto

package cicdapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CICDType int32

const (
	CICDType_CICDTYPE_UNKNOWN            CICDType = 0
	CICDType_CICDTYPE_JENKINS            CICDType = 1
	CICDType_CICDTYPE_GITHUB_SAAS        CICDType = 2
	CICDType_CICDTYPE_GITHUB_SELF_HOSTED CICDType = 3
	CICDType_CICDTYPE_GITHUB_HYBRID      CICDType = 4
	CICDType_CICDTYPE_GITLAB_SAAS        CICDType = 5
	CICDType_CICDTYPE_GITLAB_SELF_HOSTED CICDType = 6
	CICDType_CICDTYPE_GITLAB_HYBRID      CICDType = 7
)

// Enum value maps for CICDType.
var (
	CICDType_name = map[int32]string{
		0: "CICDTYPE_UNKNOWN",
		1: "CICDTYPE_JENKINS",
		2: "CICDTYPE_GITHUB_SAAS",
		3: "CICDTYPE_GITHUB_SELF_HOSTED",
		4: "CICDTYPE_GITHUB_HYBRID",
		5: "CICDTYPE_GITLAB_SAAS",
		6: "CICDTYPE_GITLAB_SELF_HOSTED",
		7: "CICDTYPE_GITLAB_HYBRID",
	}
	CICDType_value = map[string]int32{
		"CICDTYPE_UNKNOWN":            0,
		"CICDTYPE_JENKINS":            1,
		"CICDTYPE_GITHUB_SAAS":        2,
		"CICDTYPE_GITHUB_SELF_HOSTED": 3,
		"CICDTYPE_GITHUB_HYBRID":      4,
		"CICDTYPE_GITLAB_SAAS":        5,
		"CICDTYPE_GITLAB_SELF_HOSTED": 6,
		"CICDTYPE_GITLAB_HYBRID":      7,
	}
)

func (x CICDType) Enum() *CICDType {
	p := new(CICDType)
	*p = x
	return p
}

func (x CICDType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CICDType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_cicdapi_api_proto_enumTypes[0].Descriptor()
}

func (CICDType) Type() protoreflect.EnumType {
	return &file_api_v1_cicdapi_api_proto_enumTypes[0]
}

func (x CICDType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CICDType.Descriptor instead.
func (CICDType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_cicdapi_api_proto_rawDescGZIP(), []int{0}
}

type CreateCICDProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The name of the profile
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The type of CICD profile
	Type CICDType `protobuf:"varint,2,opt,name=type,proto3,enum=com.spirl.api.v1.cicd.CICDType" json:"type,omitempty"`
	// Optional. The issuer url if different from the type default
	Issuer string `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// Optional. The JWKS URL if different from the type default
	JwksUrl string `protobuf:"bytes,4,opt,name=jwks_url,json=jwksUrl,proto3" json:"jwks_url,omitempty"`
	// Optional. Additional claims other than the type defaults
	Claims []string `protobuf:"bytes,5,rep,name=claims,proto3" json:"claims,omitempty"`
}

func (x *CreateCICDProfileRequest) Reset() {
	*x = CreateCICDProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cicdapi_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCICDProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCICDProfileRequest) ProtoMessage() {}

func (x *CreateCICDProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cicdapi_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCICDProfileRequest.ProtoReflect.Descriptor instead.
func (*CreateCICDProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cicdapi_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCICDProfileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCICDProfileRequest) GetType() CICDType {
	if x != nil {
		return x.Type
	}
	return CICDType_CICDTYPE_UNKNOWN
}

func (x *CreateCICDProfileRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *CreateCICDProfileRequest) GetJwksUrl() string {
	if x != nil {
		return x.JwksUrl
	}
	return ""
}

func (x *CreateCICDProfileRequest) GetClaims() []string {
	if x != nil {
		return x.Claims
	}
	return nil
}

type CreateCICDProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *CICDProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *CreateCICDProfileResponse) Reset() {
	*x = CreateCICDProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cicdapi_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCICDProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCICDProfileResponse) ProtoMessage() {}

func (x *CreateCICDProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cicdapi_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCICDProfileResponse.ProtoReflect.Descriptor instead.
func (*CreateCICDProfileResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cicdapi_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCICDProfileResponse) GetProfile() *CICDProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type ListCICDProfilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCICDProfilesRequest) Reset() {
	*x = ListCICDProfilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cicdapi_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCICDProfilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCICDProfilesRequest) ProtoMessage() {}

func (x *ListCICDProfilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cicdapi_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCICDProfilesRequest.ProtoReflect.Descriptor instead.
func (*ListCICDProfilesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cicdapi_api_proto_rawDescGZIP(), []int{2}
}

type ListCICDProfilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*CICDProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *ListCICDProfilesResponse) Reset() {
	*x = ListCICDProfilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cicdapi_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCICDProfilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCICDProfilesResponse) ProtoMessage() {}

func (x *ListCICDProfilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cicdapi_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCICDProfilesResponse.ProtoReflect.Descriptor instead.
func (*ListCICDProfilesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cicdapi_api_proto_rawDescGZIP(), []int{3}
}

func (x *ListCICDProfilesResponse) GetProfiles() []*CICDProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type GetCICDProfileInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The name of the profile
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetCICDProfileInfoRequest) Reset() {
	*x = GetCICDProfileInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cicdapi_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCICDProfileInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCICDProfileInfoRequest) ProtoMessage() {}

func (x *GetCICDProfileInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cicdapi_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCICDProfileInfoRequest.ProtoReflect.Descriptor instead.
func (*GetCICDProfileInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cicdapi_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetCICDProfileInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetCICDProfileInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *CICDProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetCICDProfileInfoResponse) Reset() {
	*x = GetCICDProfileInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cicdapi_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCICDProfileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCICDProfileInfoResponse) ProtoMessage() {}

func (x *GetCICDProfileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cicdapi_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCICDProfileInfoResponse.ProtoReflect.Descriptor instead.
func (*GetCICDProfileInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cicdapi_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetCICDProfileInfoResponse) GetProfile() *CICDProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type DeleteCICDProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the profile to be deleted
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCICDProfileRequest) Reset() {
	*x = DeleteCICDProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cicdapi_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCICDProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCICDProfileRequest) ProtoMessage() {}

func (x *DeleteCICDProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cicdapi_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCICDProfileRequest.ProtoReflect.Descriptor instead.
func (*DeleteCICDProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cicdapi_api_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCICDProfileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCICDProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCICDProfileResponse) Reset() {
	*x = DeleteCICDProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cicdapi_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCICDProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCICDProfileResponse) ProtoMessage() {}

func (x *DeleteCICDProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cicdapi_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCICDProfileResponse.ProtoReflect.Descriptor instead.
func (*DeleteCICDProfileResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cicdapi_api_proto_rawDescGZIP(), []int{7}
}

type CICDProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the profile
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The profile type
	Type CICDType `protobuf:"varint,2,opt,name=type,proto3,enum=com.spirl.api.v1.cicd.CICDType" json:"type,omitempty"`
	// The profile name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The token issuer
	Issuer string `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// The user who created the profile
	CreatedBy string `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// The service account that created the profile
	CreatedBySa string `protobuf:"bytes,6,opt,name=created_by_sa,json=createdBySa,proto3" json:"created_by_sa,omitempty"`
	// INFO FIELDS
	// The JWKS URL to validate the token
	JwksUrl string `protobuf:"bytes,7,opt,name=jwks_url,json=jwksUrl,proto3" json:"jwks_url,omitempty"`
	// The list of valid claims in the token
	Claims []string `protobuf:"bytes,8,rep,name=claims,proto3" json:"claims,omitempty"`
}

func (x *CICDProfile) Reset() {
	*x = CICDProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cicdapi_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CICDProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CICDProfile) ProtoMessage() {}

func (x *CICDProfile) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cicdapi_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CICDProfile.ProtoReflect.Descriptor instead.
func (*CICDProfile) Descriptor() ([]byte, []int) {
	return file_api_v1_cicdapi_api_proto_rawDescGZIP(), []int{8}
}

func (x *CICDProfile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CICDProfile) GetType() CICDType {
	if x != nil {
		return x.Type
	}
	return CICDType_CICDTYPE_UNKNOWN
}

func (x *CICDProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CICDProfile) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *CICDProfile) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CICDProfile) GetCreatedBySa() string {
	if x != nil {
		return x.CreatedBySa
	}
	return ""
}

func (x *CICDProfile) GetJwksUrl() string {
	if x != nil {
		return x.JwksUrl
	}
	return ""
}

func (x *CICDProfile) GetClaims() []string {
	if x != nil {
		return x.Claims
	}
	return nil
}

var File_api_v1_cicdapi_api_proto protoreflect.FileDescriptor

var file_api_v1_cicdapi_api_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x63, 0x64, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x69, 0x63,
	0x64, 0x22, 0xae, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x49, 0x43, 0x44,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x69, 0x63, 0x64, 0x2e, 0x43, 0x49, 0x43, 0x44, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x6a, 0x77, 0x6b, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x77, 0x6b, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x73, 0x22, 0x59, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x49, 0x43, 0x44,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x69, 0x63, 0x64, 0x2e, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x19, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x69, 0x63, 0x64, 0x2e, 0x43,
	0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x49, 0x43, 0x44, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x49, 0x43, 0x44,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x69, 0x63, 0x64, 0x2e, 0x43, 0x49, 0x43,
	0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x49, 0x43, 0x44, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x0b, 0x43,
	0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x69, 0x63, 0x64,
	0x2e, 0x43, 0x49, 0x43, 0x44, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x53, 0x61, 0x12, 0x19,
	0x0a, 0x08, 0x6a, 0x77, 0x6b, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x77, 0x6b, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x73, 0x2a, 0xe4, 0x01, 0x0a, 0x08, 0x43, 0x49, 0x43, 0x44, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x43, 0x49, 0x43, 0x44, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x49, 0x43, 0x44, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4a, 0x45, 0x4e, 0x4b, 0x49, 0x4e, 0x53, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x49,
	0x43, 0x44, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x5f, 0x53, 0x41,
	0x41, 0x53, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x49, 0x43, 0x44, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x48, 0x4f, 0x53,
	0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x49, 0x43, 0x44, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x5f, 0x48, 0x59, 0x42, 0x52, 0x49, 0x44, 0x10,
	0x04, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x49, 0x43, 0x44, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x49,
	0x54, 0x4c, 0x41, 0x42, 0x5f, 0x53, 0x41, 0x41, 0x53, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x43,
	0x49, 0x43, 0x44, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x49, 0x54, 0x4c, 0x41, 0x42, 0x5f, 0x53,
	0x45, 0x4c, 0x46, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16,
	0x43, 0x49, 0x43, 0x44, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x49, 0x54, 0x4c, 0x41, 0x42, 0x5f,
	0x48, 0x59, 0x42, 0x52, 0x49, 0x44, 0x10, 0x07, 0x32, 0xe5, 0x03, 0x0a, 0x03, 0x41, 0x50, 0x49,
	0x12, 0x76, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72,
	0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x69, 0x63, 0x64, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x69, 0x63, 0x64, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x69, 0x63, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x69, 0x63, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x69, 0x63, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72,
	0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x69, 0x63, 0x64, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x49, 0x43, 0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2f, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x69, 0x63, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x49, 0x43, 0x44,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x69, 0x63, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x49, 0x43,
	0x44, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x70, 0x69, 0x72, 0x6c, 0x2f, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x69, 0x63, 0x64, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_cicdapi_api_proto_rawDescOnce sync.Once
	file_api_v1_cicdapi_api_proto_rawDescData = file_api_v1_cicdapi_api_proto_rawDesc
)

func file_api_v1_cicdapi_api_proto_rawDescGZIP() []byte {
	file_api_v1_cicdapi_api_proto_rawDescOnce.Do(func() {
		file_api_v1_cicdapi_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_cicdapi_api_proto_rawDescData)
	})
	return file_api_v1_cicdapi_api_proto_rawDescData
}

var file_api_v1_cicdapi_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_cicdapi_api_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_v1_cicdapi_api_proto_goTypes = []any{
	(CICDType)(0),                      // 0: com.spirl.api.v1.cicd.CICDType
	(*CreateCICDProfileRequest)(nil),   // 1: com.spirl.api.v1.cicd.CreateCICDProfileRequest
	(*CreateCICDProfileResponse)(nil),  // 2: com.spirl.api.v1.cicd.CreateCICDProfileResponse
	(*ListCICDProfilesRequest)(nil),    // 3: com.spirl.api.v1.cicd.ListCICDProfilesRequest
	(*ListCICDProfilesResponse)(nil),   // 4: com.spirl.api.v1.cicd.ListCICDProfilesResponse
	(*GetCICDProfileInfoRequest)(nil),  // 5: com.spirl.api.v1.cicd.GetCICDProfileInfoRequest
	(*GetCICDProfileInfoResponse)(nil), // 6: com.spirl.api.v1.cicd.GetCICDProfileInfoResponse
	(*DeleteCICDProfileRequest)(nil),   // 7: com.spirl.api.v1.cicd.DeleteCICDProfileRequest
	(*DeleteCICDProfileResponse)(nil),  // 8: com.spirl.api.v1.cicd.DeleteCICDProfileResponse
	(*CICDProfile)(nil),                // 9: com.spirl.api.v1.cicd.CICDProfile
}
var file_api_v1_cicdapi_api_proto_depIdxs = []int32{
	0, // 0: com.spirl.api.v1.cicd.CreateCICDProfileRequest.type:type_name -> com.spirl.api.v1.cicd.CICDType
	9, // 1: com.spirl.api.v1.cicd.CreateCICDProfileResponse.profile:type_name -> com.spirl.api.v1.cicd.CICDProfile
	9, // 2: com.spirl.api.v1.cicd.ListCICDProfilesResponse.profiles:type_name -> com.spirl.api.v1.cicd.CICDProfile
	9, // 3: com.spirl.api.v1.cicd.GetCICDProfileInfoResponse.profile:type_name -> com.spirl.api.v1.cicd.CICDProfile
	0, // 4: com.spirl.api.v1.cicd.CICDProfile.type:type_name -> com.spirl.api.v1.cicd.CICDType
	1, // 5: com.spirl.api.v1.cicd.API.CreateCICDProfile:input_type -> com.spirl.api.v1.cicd.CreateCICDProfileRequest
	3, // 6: com.spirl.api.v1.cicd.API.ListCICDProfiles:input_type -> com.spirl.api.v1.cicd.ListCICDProfilesRequest
	5, // 7: com.spirl.api.v1.cicd.API.GetCICDProfileInfo:input_type -> com.spirl.api.v1.cicd.GetCICDProfileInfoRequest
	7, // 8: com.spirl.api.v1.cicd.API.DeleteCICDProfile:input_type -> com.spirl.api.v1.cicd.DeleteCICDProfileRequest
	2, // 9: com.spirl.api.v1.cicd.API.CreateCICDProfile:output_type -> com.spirl.api.v1.cicd.CreateCICDProfileResponse
	4, // 10: com.spirl.api.v1.cicd.API.ListCICDProfiles:output_type -> com.spirl.api.v1.cicd.ListCICDProfilesResponse
	6, // 11: com.spirl.api.v1.cicd.API.GetCICDProfileInfo:output_type -> com.spirl.api.v1.cicd.GetCICDProfileInfoResponse
	8, // 12: com.spirl.api.v1.cicd.API.DeleteCICDProfile:output_type -> com.spirl.api.v1.cicd.DeleteCICDProfileResponse
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_v1_cicdapi_api_proto_init() }
func file_api_v1_cicdapi_api_proto_init() {
	if File_api_v1_cicdapi_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_cicdapi_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCICDProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cicdapi_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCICDProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cicdapi_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListCICDProfilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cicdapi_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListCICDProfilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cicdapi_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetCICDProfileInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cicdapi_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetCICDProfileInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cicdapi_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCICDProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cicdapi_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCICDProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cicdapi_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CICDProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_cicdapi_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_cicdapi_api_proto_goTypes,
		DependencyIndexes: file_api_v1_cicdapi_api_proto_depIdxs,
		EnumInfos:         file_api_v1_cicdapi_api_proto_enumTypes,
		MessageInfos:      file_api_v1_cicdapi_api_proto_msgTypes,
	}.Build()
	File_api_v1_cicdapi_api_proto = out.File
	file_api_v1_cicdapi_api_proto_rawDesc = nil
	file_api_v1_cicdapi_api_proto_goTypes = nil
	file_api_v1_cicdapi_api_proto_depIdxs = nil
}
