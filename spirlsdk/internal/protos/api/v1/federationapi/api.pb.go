// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: api/v1/federationapi/api.proto

package federationapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustDomainId string `protobuf:"bytes,3,opt,name=trust_domain_id,json=trustDomainId,proto3" json:"trust_domain_id,omitempty"`
	Link          *Link  `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *SetLinkRequest) Reset() {
	*x = SetLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLinkRequest) ProtoMessage() {}

func (x *SetLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLinkRequest.ProtoReflect.Descriptor instead.
func (*SetLinkRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{0}
}

func (x *SetLinkRequest) GetTrustDomainId() string {
	if x != nil {
		return x.TrustDomainId
	}
	return ""
}

func (x *SetLinkRequest) GetLink() *Link {
	if x != nil {
		return x.Link
	}
	return nil
}

type SetLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetLinkResponse) Reset() {
	*x = SetLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLinkResponse) ProtoMessage() {}

func (x *SetLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLinkResponse.ProtoReflect.Descriptor instead.
func (*SetLinkResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{1}
}

type DeleteLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The trust domain that has the link
	TrustDomainId string `protobuf:"bytes,3,opt,name=trust_domain_id,json=trustDomainId,proto3" json:"trust_domain_id,omitempty"`
	// The foreign trust domain that we are linked to
	ForeignTrustDomainName string `protobuf:"bytes,2,opt,name=foreign_trust_domain_name,json=foreignTrustDomainName,proto3" json:"foreign_trust_domain_name,omitempty"`
}

func (x *DeleteLinkRequest) Reset() {
	*x = DeleteLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLinkRequest) ProtoMessage() {}

func (x *DeleteLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLinkRequest.ProtoReflect.Descriptor instead.
func (*DeleteLinkRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteLinkRequest) GetTrustDomainId() string {
	if x != nil {
		return x.TrustDomainId
	}
	return ""
}

func (x *DeleteLinkRequest) GetForeignTrustDomainName() string {
	if x != nil {
		return x.ForeignTrustDomainName
	}
	return ""
}

type DeleteLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLinkResponse) Reset() {
	*x = DeleteLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLinkResponse) ProtoMessage() {}

func (x *DeleteLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLinkResponse.ProtoReflect.Descriptor instead.
func (*DeleteLinkResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{3}
}

type ListLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The trust domain to filter on
	TrustDomainId string `protobuf:"bytes,2,opt,name=trust_domain_id,json=trustDomainId,proto3" json:"trust_domain_id,omitempty"`
}

func (x *ListLinksRequest) Reset() {
	*x = ListLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksRequest) ProtoMessage() {}

func (x *ListLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksRequest.ProtoReflect.Descriptor instead.
func (*ListLinksRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{4}
}

func (x *ListLinksRequest) GetTrustDomainId() string {
	if x != nil {
		return x.TrustDomainId
	}
	return ""
}

type ListLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkStatuses []*LinkStatus `protobuf:"bytes,2,rep,name=link_statuses,json=linkStatuses,proto3" json:"link_statuses,omitempty"`
}

func (x *ListLinksResponse) Reset() {
	*x = ListLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksResponse) ProtoMessage() {}

func (x *ListLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksResponse.ProtoReflect.Descriptor instead.
func (*ListLinksResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{5}
}

func (x *ListLinksResponse) GetLinkStatuses() []*LinkStatus {
	if x != nil {
		return x.LinkStatuses
	}
	return nil
}

type RefreshLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustDomainId string `protobuf:"bytes,1,opt,name=trust_domain_id,json=trustDomainId,proto3" json:"trust_domain_id,omitempty"`
	// The foreign trust domain that we are linked to
	ForeignTrustDomainName string `protobuf:"bytes,2,opt,name=foreign_trust_domain_name,json=foreignTrustDomainName,proto3" json:"foreign_trust_domain_name,omitempty"`
}

func (x *RefreshLinkRequest) Reset() {
	*x = RefreshLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshLinkRequest) ProtoMessage() {}

func (x *RefreshLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshLinkRequest.ProtoReflect.Descriptor instead.
func (*RefreshLinkRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{6}
}

func (x *RefreshLinkRequest) GetTrustDomainId() string {
	if x != nil {
		return x.TrustDomainId
	}
	return ""
}

func (x *RefreshLinkRequest) GetForeignTrustDomainName() string {
	if x != nil {
		return x.ForeignTrustDomainName
	}
	return ""
}

type RefreshLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshLinkResponse) Reset() {
	*x = RefreshLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshLinkResponse) ProtoMessage() {}

func (x *RefreshLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshLinkResponse.ProtoReflect.Descriptor instead.
func (*RefreshLinkResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{7}
}

type LinkStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the trust domain with the configured link
	TrustDomainId string `protobuf:"bytes,5,opt,name=trust_domain_id,json=trustDomainId,proto3" json:"trust_domain_id,omitempty"`
	// The name of the trust domain with the configured link
	TrustDomainName string `protobuf:"bytes,1,opt,name=trust_domain_name,json=trustDomainName,proto3" json:"trust_domain_name,omitempty"`
	// The link.
	Link *Link `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	// status of the last poll
	LastPoll *PollStatus `protobuf:"bytes,3,opt,name=last_poll,json=lastPoll,proto3" json:"last_poll,omitempty"`
	// The timestamp of the last time the bundle was updated when polling.
	LastBundleUpdate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_bundle_update,json=lastBundleUpdate,proto3" json:"last_bundle_update,omitempty"`
	// The timestamp when the federation link was created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *LinkStatus) Reset() {
	*x = LinkStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkStatus) ProtoMessage() {}

func (x *LinkStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkStatus.ProtoReflect.Descriptor instead.
func (*LinkStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{8}
}

func (x *LinkStatus) GetTrustDomainId() string {
	if x != nil {
		return x.TrustDomainId
	}
	return ""
}

func (x *LinkStatus) GetTrustDomainName() string {
	if x != nil {
		return x.TrustDomainName
	}
	return ""
}

func (x *LinkStatus) GetLink() *Link {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *LinkStatus) GetLastPoll() *PollStatus {
	if x != nil {
		return x.LastPoll
	}
	return nil
}

func (x *LinkStatus) GetLastBundleUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastBundleUpdate
	}
	return nil
}

func (x *LinkStatus) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The foreign trust domain name
	TrustDomainName string    `protobuf:"bytes,1,opt,name=trust_domain_name,json=trustDomainName,proto3" json:"trust_domain_name,omitempty"`
	Endpoint        *Endpoint `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{9}
}

func (x *Link) GetTrustDomainName() string {
	if x != nil {
		return x.TrustDomainName
	}
	return ""
}

func (x *Link) GetEndpoint() *Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Types that are assignable to Profile:
	//
	//	*Endpoint_HttpsWeb
	Profile isEndpoint_Profile `protobuf_oneof:"profile"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{10}
}

func (x *Endpoint) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (m *Endpoint) GetProfile() isEndpoint_Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (x *Endpoint) GetHttpsWeb() *HTTPSWebProfile {
	if x, ok := x.GetProfile().(*Endpoint_HttpsWeb); ok {
		return x.HttpsWeb
	}
	return nil
}

type isEndpoint_Profile interface {
	isEndpoint_Profile()
}

type Endpoint_HttpsWeb struct {
	HttpsWeb *HTTPSWebProfile `protobuf:"bytes,2,opt,name=https_web,json=httpsWeb,proto3,oneof"`
}

func (*Endpoint_HttpsWeb) isEndpoint_Profile() {}

type HTTPSWebProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HTTPSWebProfile) Reset() {
	*x = HTTPSWebProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPSWebProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPSWebProfile) ProtoMessage() {}

func (x *HTTPSWebProfile) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPSWebProfile.ProtoReflect.Descriptor instead.
func (*HTTPSWebProfile) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{11}
}

type PollStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The timestamp of the poll attempt.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The error encountered while polling.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Detailed log of the HTTP exchange for the last poll. Intended for
	// debugging use only.
	HttpLog string `protobuf:"bytes,3,opt,name=http_log,json=httpLog,proto3" json:"http_log,omitempty"`
}

func (x *PollStatus) Reset() {
	*x = PollStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_federationapi_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollStatus) ProtoMessage() {}

func (x *PollStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_federationapi_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollStatus.ProtoReflect.Descriptor instead.
func (*PollStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_federationapi_api_proto_rawDescGZIP(), []int{12}
}

func (x *PollStatus) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *PollStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *PollStatus) GetHttpLog() string {
	if x != nil {
		return x.HttpLog
	}
	return ""
}

var File_api_v1_federationapi_api_proto protoreflect.FileDescriptor

var file_api_v1_federationapi_api_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x4a,
	0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x61,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x22, 0x77, 0x0a, 0x12, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x19, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xe2, 0x02, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x44, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x6c,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x6c,
	0x6c, 0x12, 0x48, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x75, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2a,
	0x0a, 0x11, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x74, 0x0a,
	0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x4b, 0x0a, 0x09, 0x68,
	0x74, 0x74, 0x70, 0x73, 0x5f, 0x77, 0x65, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x48, 0x54, 0x54,
	0x50, 0x53, 0x57, 0x65, 0x62, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x57, 0x65, 0x62, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x48, 0x54, 0x54, 0x50, 0x53, 0x57, 0x65, 0x62, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x77, 0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6c, 0x6f, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x32,
	0xb8, 0x03, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x12, 0x64, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2e, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x66,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70,
	0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x70, 0x69, 0x72, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x66, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x69, 0x72, 0x6c, 0x2f, 0x73,
	0x70, 0x69, 0x72, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_federationapi_api_proto_rawDescOnce sync.Once
	file_api_v1_federationapi_api_proto_rawDescData = file_api_v1_federationapi_api_proto_rawDesc
)

func file_api_v1_federationapi_api_proto_rawDescGZIP() []byte {
	file_api_v1_federationapi_api_proto_rawDescOnce.Do(func() {
		file_api_v1_federationapi_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_federationapi_api_proto_rawDescData)
	})
	return file_api_v1_federationapi_api_proto_rawDescData
}

var file_api_v1_federationapi_api_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_v1_federationapi_api_proto_goTypes = []any{
	(*SetLinkRequest)(nil),        // 0: com.spirl.api.v1.federation.SetLinkRequest
	(*SetLinkResponse)(nil),       // 1: com.spirl.api.v1.federation.SetLinkResponse
	(*DeleteLinkRequest)(nil),     // 2: com.spirl.api.v1.federation.DeleteLinkRequest
	(*DeleteLinkResponse)(nil),    // 3: com.spirl.api.v1.federation.DeleteLinkResponse
	(*ListLinksRequest)(nil),      // 4: com.spirl.api.v1.federation.ListLinksRequest
	(*ListLinksResponse)(nil),     // 5: com.spirl.api.v1.federation.ListLinksResponse
	(*RefreshLinkRequest)(nil),    // 6: com.spirl.api.v1.federation.RefreshLinkRequest
	(*RefreshLinkResponse)(nil),   // 7: com.spirl.api.v1.federation.RefreshLinkResponse
	(*LinkStatus)(nil),            // 8: com.spirl.api.v1.federation.LinkStatus
	(*Link)(nil),                  // 9: com.spirl.api.v1.federation.Link
	(*Endpoint)(nil),              // 10: com.spirl.api.v1.federation.Endpoint
	(*HTTPSWebProfile)(nil),       // 11: com.spirl.api.v1.federation.HTTPSWebProfile
	(*PollStatus)(nil),            // 12: com.spirl.api.v1.federation.PollStatus
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_api_v1_federationapi_api_proto_depIdxs = []int32{
	9,  // 0: com.spirl.api.v1.federation.SetLinkRequest.link:type_name -> com.spirl.api.v1.federation.Link
	8,  // 1: com.spirl.api.v1.federation.ListLinksResponse.link_statuses:type_name -> com.spirl.api.v1.federation.LinkStatus
	9,  // 2: com.spirl.api.v1.federation.LinkStatus.link:type_name -> com.spirl.api.v1.federation.Link
	12, // 3: com.spirl.api.v1.federation.LinkStatus.last_poll:type_name -> com.spirl.api.v1.federation.PollStatus
	13, // 4: com.spirl.api.v1.federation.LinkStatus.last_bundle_update:type_name -> google.protobuf.Timestamp
	13, // 5: com.spirl.api.v1.federation.LinkStatus.created_at:type_name -> google.protobuf.Timestamp
	10, // 6: com.spirl.api.v1.federation.Link.endpoint:type_name -> com.spirl.api.v1.federation.Endpoint
	11, // 7: com.spirl.api.v1.federation.Endpoint.https_web:type_name -> com.spirl.api.v1.federation.HTTPSWebProfile
	13, // 8: com.spirl.api.v1.federation.PollStatus.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 9: com.spirl.api.v1.federation.API.SetLink:input_type -> com.spirl.api.v1.federation.SetLinkRequest
	2,  // 10: com.spirl.api.v1.federation.API.DeleteLink:input_type -> com.spirl.api.v1.federation.DeleteLinkRequest
	4,  // 11: com.spirl.api.v1.federation.API.ListLinks:input_type -> com.spirl.api.v1.federation.ListLinksRequest
	6,  // 12: com.spirl.api.v1.federation.API.RefreshLink:input_type -> com.spirl.api.v1.federation.RefreshLinkRequest
	1,  // 13: com.spirl.api.v1.federation.API.SetLink:output_type -> com.spirl.api.v1.federation.SetLinkResponse
	3,  // 14: com.spirl.api.v1.federation.API.DeleteLink:output_type -> com.spirl.api.v1.federation.DeleteLinkResponse
	5,  // 15: com.spirl.api.v1.federation.API.ListLinks:output_type -> com.spirl.api.v1.federation.ListLinksResponse
	7,  // 16: com.spirl.api.v1.federation.API.RefreshLink:output_type -> com.spirl.api.v1.federation.RefreshLinkResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_v1_federationapi_api_proto_init() }
func file_api_v1_federationapi_api_proto_init() {
	if File_api_v1_federationapi_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_federationapi_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SetLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SetLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*LinkStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*HTTPSWebProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_federationapi_api_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PollStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_federationapi_api_proto_msgTypes[10].OneofWrappers = []any{
		(*Endpoint_HttpsWeb)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_federationapi_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_federationapi_api_proto_goTypes,
		DependencyIndexes: file_api_v1_federationapi_api_proto_depIdxs,
		MessageInfos:      file_api_v1_federationapi_api_proto_msgTypes,
	}.Build()
	File_api_v1_federationapi_api_proto = out.File
	file_api_v1_federationapi_api_proto_rawDesc = nil
	file_api_v1_federationapi_api_proto_goTypes = nil
	file_api_v1_federationapi_api_proto_depIdxs = nil
}
